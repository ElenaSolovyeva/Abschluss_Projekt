@using MaterialStatus.Features.SWG.Models
@using MaterialStatus.Service

<article class="table-wrapper">
    <h2>Grundputz</h2>
    <table class="table-material">
        <tr class="table-material-row">
            <th class="table-material-header-item">Rezept</th> <!-- => item.Material_Bez -->
            <th class="table-material-header-item">C. Soll</th> <!-- => item.chargenanzahl_soll -->
            <th class="table-material-header-item">C. Ist</th> <!-- => item.chargenanzahl_ist -->
            <th class="table-material-header-item">Soll, Kg</th> <!-- => item.auftrags_gewicht -->
            <th class="table-material-header-item">Ist, Kg </th> <!-- => item.auftrags_gewicht_ist -->
            
            <th class="table-material-header-item">LineId</th>
            <th class="table-material-header-item">StartTime</th>
        </tr>

        @foreach (var item in ViewData["DispoG"] as List<MaterialStatus.Features.SWG.Models.tbl_dispo>)
        {
            if (item.start_time > TimeRange.BeginnTestTime
                & item.start_time < TimeRange.EndTestTime)
            {
                <tr class="table-material-row">
                    <td class="table-material-item">@item.Material_Bez</td>
                    <td class="table-material-item">@item.chargenanzahl_soll</td>
                    <td class="table-material-item">@item.chargenanzahl_ist</td>
                    <td class="table-material-item">@Math.Round(item.auftrags_gewicht, 2)</td>
                    <td class="table-material-item">@item.auftrags_gewicht_ist</td>

                    <td class="table-material-item">@item.line_id</td>
                    <td class="table-material-item">@item.start_time</td>
                </tr>

            }
        }
    </table>
</article>

